{"version":3,"file":"static/js/191.f13efd0c.chunk.js","mappings":"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","sources":["views/istibdalMakful/IstibdalMakful.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CInputGroup,\r\n  CButton,\r\n} from '@coreui/react'\r\n\r\nconst IstibdalMakful = () => {\r\n  const options = [\r\n    'وفاة',\r\n    'صعوبة المتابعة',\r\n    'إزدواجية الكفالة',\r\n    ' إيقاف التعامل مع الجمعية',\r\n    'الهجرة',\r\n    'الزواج',\r\n    'تحسن الوضعية',\r\n    'عدم اإللتزام بالتقرير',\r\n    'طلب أهل المكفول',\r\n    'تخرج الطالب',\r\n    ' إنقطاع الطالب عن الدراسة',\r\n    'أخرى',\r\n  ]\r\n  const options2 = [\r\n    'مرض المكفول أو أمه',\r\n    'الفقر /الوضعية االجتماعية ',\r\n    'قرب تجاوز سن الكفالة',\r\n    ' يتيم حامل إلعاقة',\r\n    'عدد أفراد األسرة أكثر من 5',\r\n    'وفاة األم واألب',\r\n    ' طول فترة التسويق',\r\n    'إجمالي النقاط',\r\n  ]\r\n  const [formData, setFormData] = useState({\r\n    selectedOptions: Array(options.length).fill(false),\r\n    otherOption: '',\r\n  })\r\n  const [formData2, setFormData2] = useState({\r\n    selectedOptions: Array(options2.length).fill(false),\r\n  })\r\n  const handleCheckboxChange = (index) => {\r\n    const newSelectedOptions = [...formData.selectedOptions]\r\n    newSelectedOptions[index] = !newSelectedOptions[index]\r\n    setFormData({ ...formData, selectedOptions: newSelectedOptions })\r\n  }\r\n  const handleCheckboxChange2 = (index) => {\r\n    const newSelectedOptions = [...formData2.selectedOptions]\r\n    newSelectedOptions[index] = !newSelectedOptions[index]\r\n    setFormData2({ ...formData2, selectedOptions: newSelectedOptions })\r\n  }\r\n\r\n  const handleOtherOptionChange = (event) => {\r\n    setFormData({ ...formData, otherOption: event.target.value })\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    // Handle submission logic, e.g., send data to the server\r\n\r\n    // Reset form fields after successful submission\r\n    setFormData({\r\n      selectedOptions: Array(options.length).fill(false),\r\n      otherOption: '',\r\n    })\r\n\r\n    // Show success message\r\n    alert('Form submitted successfully!')\r\n  }\r\n\r\n  return (\r\n    <div dir=\"rtl\">\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>إجراء استبدال مكفول</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CFormLabel\r\n              htmlFor=\"fullName\"\r\n              style={{ color: 'blue', fontWeight: 'bold', fontSize: 20 }}\r\n            >\r\n              أسباب الإستبدال\r\n            </CFormLabel>\r\n\r\n            {options.map((option, index) => (\r\n              <CFormCheck\r\n                key={index}\r\n                type=\"checkbox\"\r\n                label={'-' + option}\r\n                id={`option-${index + 1}`}\r\n                checked={formData.selectedOptions[index]}\r\n                onChange={() => handleCheckboxChange(index)}\r\n              />\r\n            ))}\r\n\r\n            {formData.selectedOptions[options.length - 1] && (\r\n              <>\r\n                <CFormLabel htmlFor=\"otherOption\">(حدد)</CFormLabel>\r\n                <CInputGroup className=\"mb-3\">\r\n                  <CFormInput\r\n                    id=\"otherOption\"\r\n                    type=\"text\"\r\n                    value={formData.otherOption}\r\n                    onChange={handleOtherOptionChange}\r\n                    placeholder=\"حدد السبب\"\r\n                    aria-label=\"Specify other option\"\r\n                  />\r\n                </CInputGroup>\r\n              </>\r\n            )}\r\n          </CCardBody>\r\n          <CCardBody>\r\n            <CFormLabel\r\n              htmlFor=\"fullName\"\r\n              style={{ color: 'blue', fontWeight: 'bold', fontSize: 20 }}\r\n            >\r\n              معيار الإستبدال\r\n            </CFormLabel>\r\n\r\n            {options2.map((option, index) => (\r\n              <CFormCheck\r\n                key={index}\r\n                type=\"checkbox\"\r\n                label={'-' + option}\r\n                id={`option-${index + 1}`}\r\n                checked={formData2.selectedOptions[index]}\r\n                onChange={() => handleCheckboxChange2(index)}\r\n              />\r\n            ))}\r\n          </CCardBody>\r\n        </CCard>\r\n\r\n        <CButton className=\"m-3\" color=\"primary\" onClick={handleSubmit}>\r\n          Submit\r\n        </CButton>\r\n        <CButton\r\n          className=\"m-3\"\r\n          color=\"danger\"\r\n          onClick={() =>\r\n            setFormData({\r\n              selectedOptions: Array(options.length).fill(false),\r\n              otherOption: '',\r\n            })\r\n          }\r\n        >\r\n          Clear All\r\n        </CButton>\r\n      </CCol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IstibdalMakful\r\n"],"names":["IstibdalMakful","options","options2","formData","setFormData","useState","selectedOptions","Array","length","fill","otherOption","formData2","setFormData2","_jsx","dir","children","_jsxs","CCol","xs","CCard","className","CCardHeader","CCardBody","CFormLabel","htmlFor","style","color","fontWeight","fontSize","map","option","index","CFormCheck","type","label","id","concat","checked","onChange","newSelectedOptions","handleCheckboxChange","_Fragment","CInputGroup","CFormInput","value","event","target","placeholder","handleCheckboxChange2","CButton","onClick","handleSubmit","alert"],"sourceRoot":""}